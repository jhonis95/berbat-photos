---
import { Image } from 'astro:assets';
import Bookingcard from '../../components/bookingcard.astro';
import Layout from '../../layouts/Layout.astro';

import { getCollection } from 'astro:content';

export async function getStaticPaths(){
    const homePageEnData = await getCollection("home_page_en");
    const homePageFrData = await getCollection("home_page_fr");
    const navBarEnData = await getCollection("navigation_bar_en");
    const navBarFrData = await getCollection("navigation_bar_fr");
    const footerEnData = await getCollection("footer_bar_en");
    const footerFrData = await getCollection("footer_bar_fr");
    return [
        {
            params: { lang: "en" },
            props: {
                pageData:homePageEnData[0].data,
                navBarData:navBarEnData[0].data,
                footerData:footerEnData[0].data
            }
        },{
            params: { lang: "fr" },
            props: {
                pageData:homePageFrData[0].data,
                navBarData:navBarFrData[0].data,
                footerData:footerFrData[0].data
            }
        }
    ]
}
const { pageData,navBarData,footerData } = Astro.props;
const content={
    cards:[
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
        {image:""},
    ]
}
---

<Layout NavBarData={navBarData} FootData={footerData}>
    <main class=" flex flex-col items-center gap-12 lg:gap-[90px]">
        <section id="heroSection" class=" section relative flex flex-col justify-center items-center">
            <Image 
                class="w-full lg:w-[90dvw] max-w-[1677px] h-[405px] sm:h-[90dvh] md:max-h-[550px] lg:max-h-[694px] 2xl:max-h-[977px] lg:rounded-xl object-cover" 
                src={pageData.header.image} 
                alt={'page thumnail'}
            />
            <div class=" absolute flex flex-col justify-center items-center gap-9 xl:gap-16 font-lora italic">
                <p class=" text-brighter2 heroSectionText text-center text-lg sm:text-2xl xl:text-3xl">{pageData.header.subtitle}</p>
                <h3 class=" text-brighter2 heroSectionText text-center text-2xl sm:text-4xl xl:text-[46px]">{pageData.header.title}</h3>
            </div>
        </section>
        <section id="aboutMeSection" class=" section flex flex-col sm:flex-row justify-between items-center gap-5 lg:gap-20 w-[95dvw] max-w-[1038] md:w-[90dvw] lg:w-[80dvw] xl:max-w-[1423px]">
            <Image 
                class=" w-auto h-auto max-w-[281px] max-h-[279px] xl:max-w-[381px] xl:max-h-[379px] 2xl:max-w-[499px] 2xl:max-h-[497px] rounded-xl object-contain" 
                src={pageData.about_me_section.image}
                alt="hyu un berbat"
            />
            <div class=" flex flex-col items-center max-w-[745px] gap-3.5 xl:gap-11 2xl:gap-16 font-lora">
                <h3 class=" text-reddarker text-center text-2xl xl:text-4xl 2xl:text-[46px] italic">{ pageData.about_me_section.title}</h3>
                <dir>
                    {
                        pageData.about_me_section.content.map(({text})=>{
                            return(
                                <p class=" text-darker2 text-center text-sm xl:text-lg">{text}</p>
                            )
                        })
                    }
                </dir>
                <a class=" bg-brighter1 flex justify-center items-center rounded-lg  w-[221px] h-[46px]" href={pageData.about_me_section.button_link}>
                    <button class="cursor-pointer text-darker2  text-2xl xl:text-4xl 2xl:text-4xl">{pageData.about_me_section.button_text}</button>
                </a>
            </div>
        </section>
        <section id="serviceSection" class=" section flex flex-col ">
            <div class="flex flex-col lg:flex-row gap-11 lg:gap-5">
                {
                    pageData.services_section.map((service_card)=>{
                        return(
                            <div class=" serviceCards flex flex-col md:flex-row lg:flex-col justify-between h-fit gap-3.5 md:gap-5 w-fit lg:w-[327px] 2xl:w-[463px] font-lora">
                                <Image class="w-auto h-auto max-w-[321px] max-h-[316px] lg:max-w-[463px] lg:max-h-[376px] rounded-md object-cover" src={service_card.image} alt={'card-Image'}/>
                                <div class="flex flex-col gap-3.5 lg:gap-8 w-[321px] lg:w-full">
                                    <div class="w-full flex flex-col h-fit md:h-[244px] 2xl:h-[174px] gap-3.5 lg:gap-6">
                                        <h4 class="text-reddarker text-2xl sm:text-3xl font-medium italic">{service_card.headline}</h4>
                                        <p class="text-darker2 text-justify text-sm sm:text-base">{service_card.description}</p>
                                    </div>
                                    <div class="font-lora w-full flex justify-center">
                                        <a class="bg-brighter1 flex justify-center items-center rounded-lg w-[295px] h-[46px]" href={service_card.button_link}>
                                            <button class="cursor-pointer text-darker2 text-2xl sm:text-3xl xl:text-4xl">{service_card.button_text}</button>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        )
                    })
                }
            </div>
        </section>
        <Bookingcard Id="bookingSection" Content={pageData.booking_section}/>
        <section id="followMeSection" class=" section flex flex-col gap-3.5 lg:gap-8">
            <div class="followMeSectionContent flex flex-col gap-3.5 lg:gap-8 items-center font-lora">
                <h4 class="text-darker2 text-2xl lg:text-3xl">{pageData.follow_me_section.title}</h4>
                <a class="text-darker2 text-base lg:text-lg italic" href={pageData.follow_me_section.social_media_link}>{pageData.follow_me_section.social_media_name}</a>
            </div>
            <div class="followMeSectionContent flex flex-wrap justify-center items-center gap-3 w-[97dvw] md:w-[90dvw] max-w-[1432px] 2xl:max-w-[1709px]">
                {
                    content.cards.map(()=>{
                        return(
                            <img class="w-[15dvw] h-[19dvw]  max-w-[295px] max-h-[374px]" src="" alt=""/>
                        )
                    })
                }
            </div>
        </section>
    </main>
</Layout>
<script>
    import { animate, inView, stagger } from "../../../node_modules/motion"
    const cards=document.getElementsByClassName('serviceCards')
    let resizeTimeout:any;
    function serviceCardsChangeOrdern(){
        if(document.documentElement.clientWidth<1024){
            for(let i = 0; i < cards.length; i++){
                if(i%2==1){
                    cards[i].className=" serviceCards flex flex-col md:flex-row-reverse lg:flex-col justify-between h-fit gap-3.5 md:gap-5 w-fit lg:w-[327px] 2xl:w-[463px] font-lora"
                }
            }
        }
        if(document.documentElement.clientWidth>1024){
            for(let i = 0; i < cards.length; i++){
                if(i%2==0){
                    cards[i].className=" serviceCards flex flex-col md:flex-row lg:flex-col justify-between h-fit gap-3.5 md:gap-5 w-fit lg:w-[327px] 2xl:w-[463px] font-lora"
                }
            }
        }
    }
    window.addEventListener("resize", () => {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(serviceCardsChangeOrdern, 200); // Executes after 200ms
    });
    window.onload = () => {
        serviceCardsChangeOrdern()
    };
    document.addEventListener("astro:after-swap", () => {
        serviceCardsChangeOrdern()
      // Reinitialize any scripts here
        pageAnimation()
    });
    function pageAnimation(){
        inView("#heroSection",()=>{
            animate(".heroSectionText",{opacity:[0, 1], y:[100,0]},{ delay: stagger(0.1,{ startDelay: 0.2 }),duration:0.5})
        })
        inView("#aboutMeSection",(element)=>{
            animate(element,{opacity:[0, 1], y:[100,0]},{ delay:0.4, duration:0.5})
        })
        inView("#serviceSection",()=>{
            if(document.documentElement.clientWidth<768){
                animate(".serviceCards",{opacity:[0, 1], y:[100,0]},{ delay: stagger(0.3,{ startDelay: 0.6 }),duration:0.5})
            }else{
                animate(".serviceCards",{x:[100,0],opacity:[0,1]},{delay: stagger(0.3,{ startDelay: 0.6 }),duration:0.5})
            }
        })
        inView("#bookingSection",(element)=>{
            animate(element,{opacity:[0, 1], y:[100,0]},{ delay:0.7, duration:0.5})
        })
        inView("#followMeSection",()=>{
            animate(".followMeSectionContent",{opacity:[0, 1], y:[100,0]},{ delay: stagger(0.3,{ startDelay: 0.4 }), duration:0.5})
        })
    }
    pageAnimation()
</script>