---
import Herosection from "../../components/herosection.astro";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from 'astro:content';


export async function getStaticPaths(){
    const reviewPageEnData = await getCollection("review_page_en");
    const reviewPageFrData = await getCollection("review_page_fr");
    const navBarEnData = await getCollection("navigation_bar_en");
    const navBarFrData = await getCollection("navigation_bar_fr");
    const footerEnData = await getCollection("footer_bar_en");
    const footerFrData = await getCollection("footer_bar_fr");
    return [
        {
            params: { lang: "en" , slugReview:"review"},
            props: {
                pageData:reviewPageEnData[0].data,
                navBarData:navBarEnData[0].data,
                footerData:footerEnData[0].data
            }
        },{
            params: { lang: "fr", slugReview:"revoir"},
            props: {
                pageData:reviewPageFrData[0].data,
                navBarData:navBarFrData[0].data,
                footerData:footerFrData[0].data
            }
        }
    ]
}
const { pageData,navBarData,footerData } = Astro.props;
---
<Layout NavBarData={navBarData} FootData={footerData}>
    <main class=" flex flex-col gap-12 lg:gap-[90px] items-center">
        <Herosection
            title={pageData.header.title} 
            subtitle={pageData.header.subtitle}
            image={pageData.header.image}
        />
        <section class="bottonToTopAnimation w-full flex justify-center items-center">
            <div class="flex flex-col md:flex-row gap-9 xl:gap-24 w-full h-fit bg-brighter1 justify-center items-center py-10">
                <div class="flex flex-col gap-4 md:gap-7 max-w-[450px] md:max-w-[336px] xl:max-w-[470px] font-lora mx-3 md:mx-0">
                    <h3 class="text-reddarker text-center md:text-start text-3xl xl:text-5xl italic">{pageData.review_card.title}</h3>
                    {
                        pageData.review_card.description.map((content)=>{
                            return(
                                <p class=" text-darker2 text-sm xl:text-base text-justify">{content.text}</p>
                            )
                        })
                    }
                </div>
                <form class="flex flex-col gap-5 xl:gap-8 font-lora italic text-base w-[95dvw] max-w-[450px] md:w-[284px] xl:w-[695px]">
                    <div>
                        <label class="text-darker2 text-base " for="">{pageData.review_card.label_name}</label>
                        <div class="bg-brighter2 w-full h-[46px] rounded-sm flex justify-center items-center">
                            <input id="name" class=" px-2.5 w-full outline-none" size="16" type="text" name="name" id=""/>
                        </div>
                    </div>
                    <div>
                        <label class="text-darker2 text-base " for="">{pageData.review_card.label_email}</label>
                        <div class="bg-brighter2 w-full h-[46px] rounded-sm flex justify-center items-center">
                            <input id="reviewEmail" class=" px-2.5 w-full outline-none" size="16" type="text" name="" id="client_email">
                        </div>
                    </div>
                    <div>
                        <label class="text-darker2 text-base " for="">{pageData.review_card.label_resume}</label>
                        <div class="bg-brighter2 w-full h-[46px] rounded-sm flex justify-center items-center">
                            <input id="resume" class=" px-2.5 w-full outline-none" size="16" type="text" name="resume" id=""/>
                        </div>
                    </div>
                    <div>
                        <label class="text-darker2 text-base " for="">{pageData.review_card.label_message}</label>
                        <div class="bg-brighter2 w-full h-[129px] rounded-sm">
                            <textarea id="message" class="p-2.5 w-full h-full outline-none resize-none" name="message" id=""></textarea>
                        </div>
                    </div>
                    <div class="font-lora w-full flex justify-center">
                        <div id="reviewForm" class=" flex justify-center items-center rounded-lg bg-brighter2 w-auto min-w-[223px] h-[46px]">
                            <button class="cursor-pointer text-darker2 text-xl xl:text-2xl not-italic">{pageData.review_card.button_text}</button>
                        </div>
                    </div>
                </form>
            </div>
        </section>
    </main>
</Layout>
<script>
    import { animate, inView, stagger} from "motion"
    inView("#heroSection",()=>{
        animate(".heroSectionText",{opacity:[0, 1], y:[100,0]},{ delay: stagger(0.1,{ startDelay: 0.2 }),duration:0.5})
    })
    inView(".bottonToTopAnimation",(element)=>{
        animate(element,{opacity:[0, 1], y:[100,0]},{ delay:0.4, duration:0.5})
    })
    import emailjs from '@emailjs/browser';
    const templateParams = {
      name: '',
      resume:'',
      message:'',
      email:'',
      services:'',
      subject:'',
      greeting:'',
      heading:'',
      paragraph1:'',
      paragraph2:'',
      paragraph3:'',
      regard:'',
      from:''
    };
    const form=(document.getElementById('reviewForm') as HTMLDivElement);
    form.addEventListener('click',(e)=>{ 
        const name = (document.getElementById('name') as HTMLInputElement)?.value;
        const email = (document.getElementById('reviewEmail') as HTMLInputElement)?.value;
        const resume = (document.getElementById('resume') as HTMLInputElement)?.value;
        const message = (document.getElementById('message') as HTMLTextAreaElement)?.value;
        const lang = (document.getElementById('lang') as HTMLTextAreaElement)?.value
        
        templateParams.name=name
        templateParams.email=email
        templateParams.resume=resume
        templateParams.message=message
        templateParams.subject=lang=='fr'?"nous avons reçu vos commentaires":"we've received your feedback"
        templateParams.greeting=lang=='fr'?'Salut':'Hi'
        templateParams.heading=lang=='fr'?'Merci pour votre retour':'Thank you for your feedback'
        templateParams.paragraph1=lang=='fr'?"Merci beaucoup pour vos beaux mots et de m'avoir fait confiance pour votre séance photo !":"Thank you so much for your beautiful words and for trusting me with your photo session!"
        templateParams.paragraph2=lang=='fr'?"Ce fut un plaisir de capturer vos moments et vos commentaires signifient vraiment beaucoup.":"It was a pleasure capturing your moments, and your feedback truly means a lot."
        templateParams.paragraph3=lang=='fr'?"Je suis tellement reconnaissante que nous ayons pu travailler ensemble !":"I'm so grateful we got to work together!"
        templateParams.regard=lang=='fr'?"Cordialement":"Best regards"
        templateParams.from=lang=='fr'?"L'équipe de Berbat Photos":"The Berbat Photos Team"

        emailjs
            .send(
                import.meta.env.PUBLIC_EMAILJS_SERVICE_ID, 
                import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID2, 
                templateParams, 
                {
                    publicKey: import.meta.env.PUBLIC_EMAILJS_USER_ID,
                }
            )
            .then(
              (response) => {
                  console.log('SUCCESS!', response.status, response.text);
                  const successMsg = lang == 'fr' ? 'Message envoyé avec succès!' : 'Message sent successfully!';
                  // Exibir mensagem (exemplo simples)
                  const msgBox = document.createElement('div');
                  msgBox.innerText = successMsg;
                  msgBox.style.position = 'fixed';
                  msgBox.style.top = '20px';
                  msgBox.style.left = '50%';
                  msgBox.style.transform = 'translateX(-50%)';
                  msgBox.style.background = '#4caf50';
                  msgBox.style.color = '#fff';
                  msgBox.style.padding = '10px 20px';
                  msgBox.style.borderRadius = '8px';
                  msgBox.style.zIndex = '9999';
                  document.body.appendChild(msgBox);

                  setTimeout(() => {
                    window.location.href = '/';
                  }, 3000); // 3 segundos antes de redirecionar
                },
                (err) => {
                  console.log('FAILED...', err);
                  alert(lang == 'fr' ? 'Échec de l\'envoi du message. Veuillez réessayer.' : 'Failed to send message. Please try again.');
                }
            );
    })
</script>